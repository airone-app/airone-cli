#!/usr/bin/env node
"use strict";var e=require("fs"),t=require("path"),n=require("commander"),r=require("shelljs"),o=require("ora");function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}require("url"),require("url-search-params");var a=i(e),s=i(t),l=i(o);
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
function c(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{l(r.next(e))}catch(e){i(e)}}function s(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}l((r=r.apply(e,t||[])).next())}))}var u="airone",d="1.0.0",g="airone cli, an amazing tool to generate hybrid modularized app or related module with one-key. \nairone 一键生成跨平台模块化app神器",p={type:"git",url:"https://github.com/airone-app/airone-cli.git"};const f=e=>null==e||"string"!=typeof e||0==e.length,h={timestamp:()=>Date.now().toString(),currentDateStringWithFormat(e){const t=new Date;var n={"M+":t.getMonth()+1,"d+":t.getDate(),"h+":t.getHours(),"m+":t.getMinutes(),"s+":t.getSeconds(),"q+":Math.floor((t.getMonth()+3)/3),S:t.getMilliseconds()};for(var r in/(y+)/.test(e)&&(e=e.replace(RegExp.$1,(t.getFullYear()+"").substr(4-RegExp.$1.length))),n)new RegExp("("+r+")").test(e)&&(e=e.replace(RegExp.$1,1==RegExp.$1.length?n[r]:("00"+n[r]).substr((""+n[r]).length)));return e},currentDateString(){return this.currentDateStringWithFormat("yyyy-MM-dd hh:mm:ss.S")},sleep:e=>new Promise((t=>{setTimeout((()=>{t()}),e)}))},y=new n.Command(u),m=l.default();y.addHelpText("before",`${g} \nversion: ${d}`),y.version(d,"-v, --version","output the current version （查看当前版本号）"),y.addHelpText("after",`\n运行 ${u} -h | --help 查看命令使用。\n`);const v=()=>c(void 0,void 0,void 0,(function*(){const e=process.env.HOME||process.env.USERPROFILE||"~",t="."+u,n=s.default.join(e,t),o=s.default.join(n,"repository");if(r.which("git")||(r.echo("本工具需要请安装 git，检查到系统尚未安装，请安装之."),r.exit(1)),r.cd(n),a.default.existsSync(o)&&r.rm("-rf",o),0!==(yield(i=`git clone ${p.url} repository 1>&- 2>&-`,l="正在拉取最新版本",new Promise(((e,t)=>{m.start(l),r.exec(i,((t,n,r)=>{m.stop(),e({code:t,stdout:n,stderr:r})}))})))).code)r.echo(`${u} 更新失败`);else{if(r.exec("cli-demo --version 1>&- 2>&-").toString().replace("\n","")==d)return void console.log("当前已是最新版本，无需要更新 ^_^")}var i,l})),S=e=>{const t=process.env.HOME||process.env.USERPROFILE||"~",n="."+u,r=s.default.join(t,n),o=s.default.join(r,"config.json");let i={version:d,lastUpdate:h.currentDateStringWithFormat("yyyy-M-d")};if(null==e&&(e=o,a.default.existsSync(r)||(console.log("Create project global config dir => ",r),a.default.mkdirSync(r))),a.default.existsSync(e)){const t=a.default.readFileSync(e),n=t&&t.toString();f(n)||(i=JSON.parse(n))}else x(i);return i},x=(e,t)=>{const n=process.env.HOME||process.env.USERPROFILE||"~",r="."+u,o=s.default.join(n,r),i=s.default.join(o,"config.json");null==t&&(t=i,a.default.existsSync(o)||(console.log("Create project global config dir => ",o),a.default.mkdirSync(o))),a.default.writeFileSync(t,JSON.stringify(e,null,"\t"))};y.command("update").description("脚本自动升级").action((()=>{((e=!1)=>{if(!e){const e=S();if(null==e)return;const t=h.currentDateStringWithFormat("yyyy-M-d");if(e.lastUpdate==t)return;console.log(`${u} 每日更新中，请稍等...`)}v()})()})),y.parse(process.argv);
